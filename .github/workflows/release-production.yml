name: Release (Production)

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build App
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get Changed Files
        id: git-diff
        run: |
          git_diff_target=$(git tag -l --format "%(refname:short)" --sort version:refname "v*beta*" | tail -n 1)
          echo "::set-output name=files::$(git diff-tree --no-commit-id --name-only -r $git_diff_target ${{ github.sha }})"
      - name: Cache Optimized Images
        id: cache-optimized-images
        uses: actions/cache@v2
        with:
          path: public/assets/img
          key: cache-optimized-images-${{ hashFiles('resources/images/**') }}
          restore-keys: cache-optimized-images
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-cache-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-cache-node-modules
      - name: Install Dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm install
      - name: Determining Release Information
        run: npm run release:information
      - name: Upload release-information Artifact
        uses: actions/upload-artifact@v2
        with:
          name: release-information
          path: |
            .NOTES
            .VERSION
      - name: Generate Optimized Images
        if: ${{ steps.cache-optimized-images.outputs.cache-hit != 'true' || contains(steps.git-diff.outputs.files, 'resources/images')}}
        run: npm run generate:images
      - name: Build Browser
        env:
          REACT_APP_AZURE_COGNITIVE_TTS_SUBSCRIPTION_KEY: ${{secrets.REACT_APP_AZURE_COGNITIVE_TTS_SUBSCRIPTION_KEY}}
          REACT_APP_AZURE_COGNITIVE_TTS_SERVICE_REGION: ${{secrets.REACT_APP_AZURE_COGNITIVE_TTS_SERVICE_REGION}}
        run: npm run build:ionic:browser
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-browser
          path: build
  resources:
    name: Generate Screenshots
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-cache-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-cache-node-modules
      - name: Download build-browser Artifact
        uses: actions/download-artifact@v2
        with:
          name: build-browser
          path: build
      - name: Install Dependencies
        run: npm install
      - name: Generate Screenshots (en-US)
        env:
          JEST_PLAYWRIGHT_CONTEXT_OPTION_LOCAL: en-US
          JEST_PLAYWRIGHT_SCREENSHOT_SEARCH_QUERY: feed
        run: npm run generate:screenshots
      - name: Generate Screenshots (ta-IN)
        env:
          JEST_PLAYWRIGHT_CONTEXT_OPTION_LOCAL: ta-IN
          JEST_PLAYWRIGHT_SCREENSHOT_SEARCH_QUERY: உலர்ந்த
        run: npm run generate:screenshots
      - name: Upload iOS Screenshots Artifact
        uses: actions/upload-artifact@v2
        with:
          name: screenshots-ios
          path: dist/screenshots/ios
      - name: Upload Android Screenshots Artifact
        uses: actions/upload-artifact@v2
        with:
          name: screenshots-android
          path: dist/screenshots/android
  deploy_pwa:
    name: Deploy Web App
    needs: resources
    runs-on: ubuntu-latest
    steps:
      - name: Download build-browser Artifact
        uses: actions/download-artifact@v2
        with:
          name: build-browser
      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v0.0.1-preview
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_POLITE_PLANT_0E8492703 }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: 'upload'
          ###### Repository/Build Configurations
          app_location: '/' # App source code path
          api_location: 'api' # Api source code path - optional
          routes_location: '/' # Defines the directory location where the routes.json file is found.
          ###### End of Repository/Build Configurations ######
  deploy_ios:
    name: Deploy iOS App
    needs: resources
    env:
      APP_IDENTIFIER: ${{ secrets.APP_IDENTIFIER }}
      APPLE_ID: ${{ secrets.APPLE_ID }}
      APP_STORE_TEAM_ID: ${{ secrets.APP_STORE_TEAM_ID }}
      DEVELOPER_TEAM_ID: ${{ secrets.DEVELOPER_TEAM_ID }}
      FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
      FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
      FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
      FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
      MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
      MATCH_GIT_REPO_URL: ${{ secrets.MATCH_GIT_REPO_URL }}
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      SPACESHIP_ONLY_ALLOW_INTERACTIVE_2FA: true
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download build-browser Artifact
        uses: actions/download-artifact@v2
        with:
          name: build-browser
          path: ios/App/App/public
      - name: Download iOS Screenshots Artifact
        uses: actions/download-artifact@v2
        with:
          name: screenshots-ios
          path: ios/App/fastlane/screenshots
      - name: Download release-information Artifact
        uses: actions/download-artifact@v2
        with:
          name: release-information
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-cache-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-cache-node-modules
      - name: Install Dependencies
        run: npm install
      - name: Update Capacitor dependencies
        run: npx ionic capacitor update ios
      - name: Install iOS Dependencies
        run: bundle install
        working-directory: ./ios/App
      - name: Setup Fastlane Environment
        run: bundle exec fastlane setup_env_github
        working-directory: ./ios/App
      - name: Generate Screenshots (App Store)
        run: bundle exec fastlane screenshots
        working-directory: ./ios/App
      - name: Build and Deploy to Testflight
        run: bundle exec fastlane beta
        working-directory: ./ios/App
