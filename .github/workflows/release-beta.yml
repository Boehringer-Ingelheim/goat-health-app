name: Release (Beta)

on:
  push:
    branches:
      - beta

jobs:
  build:
    name: Build App
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get Changed Files
        id: git-diff
        run: |
          git_diff_target=$(git tag -l --format "%(refname:short)" --sort version:refname "v*beta*" | tail -n 1)
          echo "::set-output name=files::$(git diff-tree --no-commit-id --name-only -r $git_diff_target ${{ github.sha }})"
      - name: Cache Optimized Images
        id: cache-optimized-images
        uses: actions/cache@v2
        with:
          path: public/assets/img
          key: cache-optimized-images-${{ hashFiles('resources/images/**') }}
          restore-keys: cache-optimized-images
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-cache-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-cache-node-modules
      - name: Install Dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm install
      - name: Determining Release Information
        run: npm run release:information
      - name: Upload release-information Artifact
        uses: actions/upload-artifact@v2
        with:
          name: release-information
          path: |
            .NOTES
            .VERSION
      - name: Generate Optimized Images
        if: ${{ steps.cache-optimized-images.outputs.cache-hit != 'true' || contains(steps.git-diff.outputs.files, 'resources/images')}}
        run: npm run generate:images
      - name: Build Browser
        env:
          REACT_APP_AZURE_COGNITIVE_TTS_SUBSCRIPTION_KEY: ${{secrets.REACT_APP_AZURE_COGNITIVE_TTS_SUBSCRIPTION_KEY}}
          REACT_APP_AZURE_COGNITIVE_TTS_SERVICE_REGION: ${{secrets.REACT_APP_AZURE_COGNITIVE_TTS_SERVICE_REGION}}
        run: npm run build:ionic:browser
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-browser
          path: build
  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download build-browser Artifact
        uses: actions/download-artifact@v2
        with:
          name: build-browser
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-cache-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-cache-node-modules
      - name: Install Dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci
      - name: Create Release On GitHub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run release:github
